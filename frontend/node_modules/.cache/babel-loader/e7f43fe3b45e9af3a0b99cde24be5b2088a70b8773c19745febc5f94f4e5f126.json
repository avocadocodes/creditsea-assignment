{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Downloads\\\\assignment-creditsea\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport UploadForm from \"./components/UploadForm\";\nimport ReportList from \"./components/ReportList\";\nimport \"./index.css\"; // Ensure global CSS is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [reports, setReports] = useState([]);\n  const fetchReports = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"http://localhost:5000/api/reports\");\n      setReports(data);\n    } catch (error) {\n      console.error(\"Error fetching reports\", error);\n    }\n  };\n  useEffect(() => {\n    fetchReports();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Credit Report Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n      fetchReports: fetchReports\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReportList, {\n      reports: reports\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eifepoxx2Z0yKkh6cCXYE5fQb1c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","UploadForm","ReportList","jsxDEV","_jsxDEV","App","_s","reports","setReports","fetchReports","data","get","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nikit/Downloads/assignment-creditsea/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport UploadForm from \"./components/UploadForm\";\nimport ReportList from \"./components/ReportList\";\nimport \"./index.css\"; // Ensure global CSS is imported\n\nconst App = () => {\n  const [reports, setReports] = useState([]);\n\n  const fetchReports = async () => {\n    try {\n      const { data } = await axios.get(\"http://localhost:5000/api/reports\");\n      setReports(data);\n    } catch (error) {\n      console.error(\"Error fetching reports\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchReports();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Credit Report Dashboard</h1>\n      <UploadForm fetchReports={fetchReports} />\n      <ReportList reports={reports} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,CAAC;MACrEH,UAAU,CAACE,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBX,OAAA;MAAAW,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCf,OAAA,CAACH,UAAU;MAACQ,YAAY,EAAEA;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1Cf,OAAA,CAACF,UAAU;MAACK,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACb,EAAA,CAvBID,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}