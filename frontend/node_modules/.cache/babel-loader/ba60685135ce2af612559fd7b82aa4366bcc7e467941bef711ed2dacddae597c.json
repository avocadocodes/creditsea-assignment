{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Downloads\\\\assignment-creditsea\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = ({\n  fetchReports\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) return alert(\"Please select an XML file\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    setLoading(true);\n    try {\n      await axios.post(\"http://localhost:5000/api/upload\", formData);\n      fetchReports();\n    } catch (error) {\n      console.error(\"Upload failed\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC2 Upload XML File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Uploading...\" : \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"b5r+Px8JiWNYfU82tOaR18FdgbQ=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","fetchReports","_s","file","setFile","loading","setLoading","handleUpload","e","preventDefault","alert","formData","FormData","append","post","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","files","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/nikit/Downloads/assignment-creditsea/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadForm = ({ fetchReports }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) return alert(\"Please select an XML file\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/upload\", formData);\r\n      fetchReports();\r\n    } catch (error) {\r\n      console.error(\"Upload failed\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <h2>ðŸ“‚ Upload XML File</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? \"Uploading...\" : \"Upload\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,EAAE,OAAOO,KAAK,CAAC,2BAA2B,CAAC;IAEpD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;IAE7BG,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMT,KAAK,CAACiB,IAAI,CAAC,kCAAkC,EAAEH,QAAQ,CAAC;MAC9DV,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACRT,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKkB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BnB,OAAA;MAAAmB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGhB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACiB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEvB,OAAA;MAAQ4B,OAAO,EAAEpB,YAAa;MAACqB,QAAQ,EAAEvB,OAAQ;MAAAa,QAAA,EAC9Cb,OAAO,GAAG,cAAc,GAAG;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACpB,EAAA,CA/BIF,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}