{"ast":null,"code":"import React,{useState}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadForm=_ref=>{let{fetchReports}=_ref;const[file,setFile]=useState(null);const[loading,setLoading]=useState(false);const handleUpload=async e=>{e.preventDefault();if(!file)return alert(\"Please select an XML file\");const formData=new FormData();formData.append(\"file\",file);setLoading(true);try{await axios.post(\"http://localhost:5000/api/upload\",formData);fetchReports();}catch(error){console.error(\"Upload failed\",error);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"upload-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCC2 Upload XML File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>setFile(e.target.files[0])}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:loading,children:loading?\"Uploading...\":\"Upload\"})]});};export default UploadForm;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","UploadForm","_ref","fetchReports","file","setFile","loading","setLoading","handleUpload","e","preventDefault","alert","formData","FormData","append","post","error","console","className","children","type","onChange","target","files","onClick","disabled"],"sources":["C:/Users/nikit/Downloads/assignment-creditsea/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadForm = ({ fetchReports }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) return alert(\"Please select an XML file\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/upload\", formData);\r\n      fetchReports();\r\n    } catch (error) {\r\n      console.error(\"Upload failed\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <h2>ðŸ“‚ Upload XML File</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? \"Uploading...\" : \"Upload\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CAClC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAa,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACN,IAAI,CAAE,MAAO,CAAAO,KAAK,CAAC,2BAA2B,CAAC,CAEpD,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEV,IAAI,CAAC,CAE7BG,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAX,KAAK,CAACmB,IAAI,CAAC,kCAAkC,CAAEH,QAAQ,CAAC,CAC9DT,YAAY,CAAC,CAAC,CAChB,CAAE,MAAOa,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACvC,CAAC,OAAS,CACRT,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEP,KAAA,QAAKkB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BrB,IAAA,OAAAqB,QAAA,CAAI,8BAAkB,CAAI,CAAC,cAC3BrB,IAAA,UAAOsB,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAGZ,CAAC,EAAKJ,OAAO,CAACI,CAAC,CAACa,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAE,CAAC,cAClEzB,IAAA,WAAQ0B,OAAO,CAAEhB,YAAa,CAACiB,QAAQ,CAAEnB,OAAQ,CAAAa,QAAA,CAC9Cb,OAAO,CAAG,cAAc,CAAG,QAAQ,CAC9B,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}